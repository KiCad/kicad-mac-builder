From 979e8328b3b393ebc67fdc22b27373041496a541 Mon Sep 17 00:00:00 2001
From: Adam Wolf <adamwolf@feelslikeburning.com>
Date: Sat, 19 May 2018 15:06:40 -0500
Subject: [PATCH] Setup PYTHON_FRAMEWORK embedded in MacOS.
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="------------2.15.1"

This is a multi-part message in MIME format.
--------------2.15.1
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit

---
 kicad/CMakeLists.txt | 41 +++++++++++++++++++++++++++++++++++++----
 pcbnew/pcbnew.cpp    | 17 ++++++++++++++++-
 2 files changed, 53 insertions(+), 5 deletions(-)


--------------2.15.1
Content-Type: text/x-patch; name="0001-Setup-PYTHON_FRAMEWORK-embedded-in-MacOS.patch"
Content-Transfer-Encoding: 8bit
Content-Disposition: attachment; filename="0001-Setup-PYTHON_FRAMEWORK-embedded-in-MacOS.patch"

diff --git a/kicad/CMakeLists.txt b/kicad/CMakeLists.txt
index 029402b0b..edddc25b6 100644
--- a/kicad/CMakeLists.txt
+++ b/kicad/CMakeLists.txt
@@ -100,6 +100,12 @@ if( APPLE )
         set( SCRIPTING_HELPER "0" )
     endif()
 
+    if( PYTHON_FRAMEWORK )
+        set( PYTHON_FRAMEWORK_HELPER "1" )
+    else()
+        set( PYTHON_FRAMEWORK_HELPER "0" )
+    endif()
+
     # make main bundle relocatable
     install( CODE "
         # find all libs and modules
@@ -120,10 +126,37 @@ if( APPLE )
         # do all the work
         include( BundleUtilities )
 
-        fixup_bundle( ${OSX_BUNDLE_INSTALL_BIN_DIR}/kicad
-            \"\${BUNDLE_FIX_LIBS}\"
-            \"\"
-            )
+        if ( ${PYTHON_FRAMEWORK_HELPER} )
+            execute_process( COMMAND rsync -alv ${PYTHON_FRAMEWORK} ${OSX_BUNDLE_INSTALL_LIB_DIR}/)
+            # CMake's COPY_RESOLVED_BUNDLE... and COPY_DIRECTORY don't handle symlinks correctly
+            fixup_bundle( ${OSX_BUNDLE_INSTALL_BIN_DIR}/kicad
+                \"\${BUNDLE_FIX_LIBS}\"
+                \"\"
+                IGNORE_ITEM \"Python;python;python2;python2.7;pythonw;pythonw2;pythonw2.7\"
+                )
+
+            # BundleUtilities clobbers the rpaths that we carefully setup in Python.framework, so recreate them here.
+
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../Frameworks _pcbnew.kiface
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../Frameworks ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Resources/Python.app/Contents/MacOS/Python
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../../../../../../../ ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Resources/Python.app/Contents/MacOS/Python
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../../../../../../../ ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Resources/Python.app/Contents/MacOS/Python
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../../../../../ ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Resources/Python.app/Contents/MacOS/Python
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../../../../ ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Versions/2.7/bin/python
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+            execute_process( COMMAND install_name_tool -add_rpath @executable_path/../../../../ ${OSX_BUNDLE_INSTALL_LIB_DIR}/Python.framework/Versions/2.7/bin/pythonw
+                WORKING_DIRECTORY ${OSX_BUNDLE_INSTALL_KIFACE_DIR} )
+        else()
+            fixup_bundle( ${OSX_BUNDLE_INSTALL_BIN_DIR}/kicad
+                \"\${BUNDLE_FIX_LIBS}\"
+                \"\"
+                )
+        endif()
         " COMPONENT Runtime
         )
 
diff --git a/pcbnew/pcbnew.cpp b/pcbnew/pcbnew.cpp
index 6129fc2a4..fc70e605f 100644
--- a/pcbnew/pcbnew.cpp
+++ b/pcbnew/pcbnew.cpp
@@ -240,8 +240,23 @@ static bool scriptingSetup()
     // Add default paths to PYTHONPATH
     wxString pypath;
 
+    pypath += Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload" );
+    pypath += wxT( ":" ) + Pgm().GetExecutablePath() +
+              wxT( "Contents/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages" );
+
     // Bundle scripting folder (<kicad.app>/Contents/SharedSupport/scripting)
-    pypath += GetOSXKicadDataDir() + wxT( "/scripting" );
+    pypath += wxT( ":" ) + GetOSXKicadDataDir() + wxT( "/scripting" );
 
     // $(KICAD_PATH)/scripting/plugins is always added in kicadplugins.i
     if( wxGetenv("KICAD_PATH") != NULL )

--------------2.15.1--


