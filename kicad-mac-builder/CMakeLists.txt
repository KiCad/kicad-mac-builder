cmake_minimum_required( VERSION 3.6.2 )
include( ExternalProject )

if( NOT DEFINED KICAD_CMAKE_BUILD_TYPE )
  message( FATAL_ERROR "KICAD_CMAKE_BUILD_TYPE must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED KICAD_TAG )
  message( FATAL_ERROR "KICAD_TAG must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED PACKAGES3D_TAG )
  message( FATAL_ERROR "PACKAGES3D_TAG must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED FOOTPRINTS_TAG )
  message( FATAL_ERROR "FOOTPRINTS_TAG must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED TRANSLATIONS_TAG )
  message( FATAL_ERROR "TRANSLATIONS_TAG must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED SYMBOLS_TAG )
  message( FATAL_ERROR "SYMBOLS_TAG must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED DOCS_TARBALL_URL)
  message( FATAL_ERROR "DOCS_TARBALL_URL must be set.  Please see the README or try build.py." )
endif ()
if( NOT DEFINED TEMPLATES_TAG)
  message( FATAL_ERROR "TEMPLATES_TAG must be set.  Please see the README or try build.py." )
endif ()

if( NOT DEFINED MACOS_MIN_VERSION )
message( FATAL_ERROR "MACOS_MIN_VERSION must be set.  For example 'cmake -DMACOS_MIN_VERSION=10.13 ../kicad-mac-builder'" )
endif ()

set( CMAKE_VERBOSE_MAKEFILE ON )
set( BIN_DIR ${CMAKE_SOURCE_DIR}/bin )

set( PYTHON_VERSION 2.7.16 )
set( PYTHON_URL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz )
set( PYTHON_SHA1 e824c633a59fa2ca1dc2123de855007e64f9de98 )
set( PYTHON_INSTALL_DIR ${CMAKE_BINARY_DIR}/python-dest/Library/Frameworks ) # Ending in /Library/Frameworks is important here

set( WXPYTHON_VERSION 3.0.2.0 )
# set(WXPYTHON_URL http://downloads.sourceforge.net/project/wxpython/wxPython/${WXPYTHON_VERSION}/wxPython-src-${WXPYTHON_VERSION}.tar.bz2 )
set( WXPYTHON_URL ${CMAKE_SOURCE_DIR}/../external/wxPython-src-${WXPYTHON_VERSION}.tar.bz2 )
set( WXPYTHON_SHA1 5053f3fa04f4eb3a9d4bfd762d963deb7fa46866 )
set( wxwidgets_INSTALL_DIR ${CMAKE_BINARY_DIR}/wxwidgets-dest )
set( wxpython_INSTALL_DIR ${CMAKE_BINARY_DIR}/wxpython-dest )
set( six_DIR ${CMAKE_BINARY_DIR}/six/src/six )

set( ngspice_INSTALL_DIR ${CMAKE_BINARY_DIR}/ngspice-dest )

set( KICAD_URL https://git.launchpad.net/kicad )
set( KICAD_INSTALL_DIR ${CMAKE_BINARY_DIR}/kicad-dest )

# find OCE
execute_process(COMMAND brew --cellar oce OUTPUT_VARIABLE OCE_BASEDIR RESULT_VARIABLE FOUND_OCE_BASEDIR_EXIT_CODE OUTPUT_STRIP_TRAILING_WHITESPACE)
if (NOT ${FOUND_OCE_BASEDIR_EXIT_CODE} EQUAL 0)
  message( FATAL_ERROR "Unable to find OCE's base directory from brew.  Make sure you have installed all the dependencies per the README. Exiting." )
endif()
execute_process(COMMAND find ${OCE_BASEDIR} -name Resources OUTPUT_VARIABLE OCE_DIR OUTPUT_STRIP_TRAILING_WHITESPACE RESULT_VARIABLE FOUND_OCE_EXIT_CODE)
if (NOT ${FOUND_OCE} EQUAL 0)
  message( FATAL_ERROR "Unable to find Resources in ${OCE_BASEDIR}.  Make sure you have installed all the dependencies per the README. Exiting." )
endif()

set( KICAD_CMAKE_ARGS -DDEFAULT_INSTALL_PATH=/Library/Application\ Support/kicad )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DCMAKE_OSX_DEPLOYMENT_TARGET=${MACOS_MIN_VERSION} )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DwxWidgets_CONFIG_EXECUTABLE=${wxwidgets_INSTALL_DIR}/bin/wx-config )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DKICAD_SCRIPTING=ON -DKICAD_SCRIPTING_MODULES=ON -DKICAD_SCRIPTING_WXPYTHON=ON )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DKICAD_SCRIPTING_ACTION_MENU=ON )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DPYTHON_EXECUTABLE=${PYTHON_INSTALL_DIR}/Python.framework/Versions/2.7/bin/python2.7 )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DPYTHON_INCLUDE_DIR=${PYTHON_INSTALL_DIR}/Python.framework/Versions/2.7/include/python2.7/ )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DPYTHON_LIBRARY=${PYTHON_INSTALL_DIR}/Python.framework/Versions/2.7/lib/libpython2.7.dylib )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DPYTHON_SITE_PACKAGE_PATH=${wxwidgets_INSTALL_DIR}/lib/python2.7/site-packages )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DPYTHON_FRAMEWORK=${PYTHON_INSTALL_DIR}/Python.framework )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DCMAKE_INSTALL_PREFIX=${KICAD_INSTALL_DIR} )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DKICAD_USE_OCE=ON )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DOCE_DIR=${OCE_DIR} )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DKICAD_SPICE=ON )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DNGSPICE_INCLUDE_DIR=${ngspice_INSTALL_DIR}/include )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DNGSPICE_LIBRARY=${ngspice_INSTALL_DIR}/lib/libngspice.dylib )
set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DCMAKE_BUILD_TYPE=${KICAD_CMAKE_BUILD_TYPE} )

if(${KICAD_VERSION_EXTRA})
  set( KICAD_CMAKE_ARGS ${KICAD_CMAKE_ARGS} -DKICAD_VERSION_EXTRA=${KICAD_VERSION_EXTRA} )
endif()

set( DMG_DIR ${CMAKE_BINARY_DIR}/dmg )
set( TRANSLATIONS_URL https://github.com/KiCad/kicad-i18n.git )

message( "CMake Setting Summary for kicad-mac-builder" )
message( "KICAD_TAG: ${KICAD_TAG}" )
message( "PACKAGES3D_TAG: ${PACKAGES3D_TAG}" )
message( "SYMBOLS_TAG: ${SYMBOLS_TAG}" )
message( "FOOTPRINTS_TAG: ${FOOTPRINTS_TAG}" )
message( "TRANSLATIONS_TAG: ${TRANSLATIONS_TAG}" )
message( "TEMPLATES_TAG: ${TEMPLATES_TAG}" )
message( "DOCS_TARBALL_URL: ${DOCS_TARBALL_URL}" )
message( "KICAD_CMAKE_ARGS: ${KICAD_CMAKE_ARGS}" )


include( python.cmake )
include( wxpython.cmake )
include( ngspice.cmake)
include( docs.cmake )
include( kicad.cmake )
include( translations.cmake )

include( footprints.cmake )
include( symbols.cmake )
include( templates.cmake )
include( packages3d.cmake )

include( package_kicad_nightly.cmake )
include( package_kicad_unified.cmake )
include( package_extras.cmake )
