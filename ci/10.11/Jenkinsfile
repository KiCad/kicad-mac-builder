pipeline {
    agent { label 'macos10.11' }
    options { disableConcurrentBuilds() }

    stages {
        stage('setting up clean environment') {
            steps {
                dir('ci/10.11') {
                  sh 'cp -r ../src/* .'
                  sh 'PATH=$PATH:/usr/local/bin vagrant destroy -f || true'
                  sh 'rm -rf .vagrant'
                  sh 'PATH=$PATH:/usr/local/bin vagrant up'
                }
            }
        }
        stage('build') {
            steps {
                dir('ci/10.11') {
                  sh 'PATH=$PATH:/usr/local/bin vagrant up'
                }
            }
        }
    }
    post {
        always {
                dir('ci/10.11') {
                  sh 'PATH=$PATH:/usr/local/bin vagrant halt'
                }
        }
        success {
               setBuildStatus("Complete","SUCCESS","Builds and packages on 10.11","${gitCommit}")
       }
    }
}

def setBuildStatus(String message, String state, String context, String sha) {
   step([
     $class: "GitHubCommitStatusSetter",
     reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/wayneandlayne/kicad-mac-builder/"],
     contextSource: [$class: "ManuallyEnteredCommitContextSource", context: context],
     errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
     commitShaSource: [$class: "ManuallyEnteredShaSource", sha: sha ],
     statusBackrefSource: [$class: "ManuallyEnteredBackrefSource", backref: "${BUILD_URL}flowGraphTable/"],
     statusResultSource: [$class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
   ]);
}
